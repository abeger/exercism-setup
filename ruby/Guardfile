# A sample Guardfile
# More info at https://github.com/guard/guard#readme

## Uncomment and set this to only include directories you want to watch
# directories %w(app lib config test spec features) \
#  .select{|d| Dir.exists?(d) ? d : UI.warning("Directory #{d} does not exist")}

## Note: if you are using the `directories` clause above and you are not
## watching the project directory ('.'), then you will want to move
## the Guardfile to a watched dir and symlink it back, e.g.
#
#  $ mkdir config
#  $ mv Guardfile config/
#  $ ln -s config/Guardfile .
#
# and, you'll have to watch "config/Guardfile" instead of "Guardfile"

guard :shell, :all_on_start => false do
  watch(%r{^.*/.*_test\.rb$}) { |m| `ruby #{m[0]}` }
  watch(%r{^(.*)/(.*)\.rb$})  { |m| `ruby #{m[1]}/#{m[2]}_test.rb` unless m[2].end_with?("_test") }
end

guard :rubocop, :all_on_start => false do
  ignore(%r{.+\_test.rb$})
  watch(%r{.+\.rb$})
  watch(%r{(?:.+/)?\.rubocop\.yml$}) { |m| File.dirname(m[0]) }
end

# A sample Guardfile
# More info at https://github.com/guard/guard#readme

guard :preek, run_all_dir: 'lib' do
  watch(%r{.+\.rb$})
	#watch(/^lib\/(.*).rb/)
end

